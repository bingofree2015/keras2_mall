<krpano>


	<!-- 3D Transition 3D过渡 args="scenename" 参数=场景名称-->
	<!--  点击地面白点移动效果-->
			<action name="tour3d_loadscene" scope="local" args="scenename">
				loadscene(get(scenename), null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.6));
				if (global.customtransition != 'SKIP', if(global.customtransition !== null, global.customtransition(); , 
				tween(view.tx|view.ty|view.tz, calc(image.ox + '|' + image.oy + '|' + image.oz), 1.5, easeinoutsine); ); ); 
				delete(global.customtransition); delete(global.customtransitiontime); 
				changeview();<!-- 切换视角 -->

			</action>
	<!--  点击地面白点移动效果-->

			<action name="tour3d_loadscene1" scope="local" args="scenename">
				loadscene(get(scenename), null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.0));
				if (global.customtransition != 'SKIP', if(global.customtransition !== null, global.customtransition(); , 
				tween(view.tx|view.ty|view.tz, calc(image.ox + '|' + image.oy + '|' + image.oz), 0.0, easeinoutsine); ); ); 
				delete(global.customtransition); delete(global.customtransitiontime); 
				changeview();<!-- 切换视角 -->

				set(view.hlookat, get(xml.view.hlookat));	
				set(view.vlookat, get(xml.view.vlookat));
				

			</action>
<!--  外景进入内景的动作-->
			<action name="tour3d_loadscene11" scope="local" args="scenename">
			

				loadscene(get(scenename), null, MERGE, NOBLEND(1));
				if (global.customtransition != 'SKIP', if(global.customtransition !== null, global.customtransition(); , 
				tween(view.tx|view.ty|view.tz, calc(image.ox + '|' + image.oy + '|' + image.oz), 0.0, easeinoutsine); ); ); 
				delete(global.customtransition); delete(global.customtransitiontime); 
				set(view.hlookat, get(xml.view.hlookat));	
				set(view.vlookat, get(xml.view.vlookat));
				changeview();
		
			</action>		

			<!-- <action name="tour3d_loadscene11" scope="local" args="scenename">
				js(startanimation());
				
				delayedcall(0.6, 
				loadscene(get(scenename), null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.0));
				if (global.customtransition != 'SKIP', if(global.customtransition !== null, global.customtransition(); , 
				tween(view.tx|view.ty|view.tz, calc(image.ox + '|' + image.oy + '|' + image.oz), 0.0, easeinoutsine); ); ); 
				delete(global.customtransition); delete(global.customtransitiontime); 
				changeview(); 
				);
				delayedcall(0.6, 
				set(view.hlookat, get(xml.view.hlookat));	
				set(view.vlookat, get(xml.view.vlookat));
				);
				
			</action>	 -->
					
			
	
<!--  在模型中点击任意位置触发的事件-->
	<action name="tour3d_loadscene2" scope="local" args="scenename">
		loadscene(get(scenename), null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.6));
		if (global.customtransition != 'SKIP', if(global.customtransition !== null, global.customtransition(); , 
		tween(view.tx|view.ty|view.tz|view.ox|view.oy|view.oz|view.fisheye, calc(''+image.ox+'|'+image.oy+'|'+image.oz+'|0|0|0|0'), 1.5, default ); ); ); 
		delete(global.customtransition); delete(global.customtransitiontime); 
		changeview();<!-- 切换视角 -->				
		floorunitno();<!--关闭模型中的透明图标 -->
		floorutno();<!--关闭模型中的单元标识 -->
		currentlocation();<!--关闭模型中当前位置标识 -->
		js(container1121(););<!--  -->
		floorhsspot1('%1');					
	</action>

	<!--  在模型中点返回场景触发的事件-->
	<action name="tour3d_loadscene4" scope="local" args="scenename">				

				loadscene(get(scenename), null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.6));
				if (global.customtransition != 'SKIP', if(global.customtransition !== null, global.customtransition(); , 
				tween(view.tx|view.ty|view.tz|view.ox|view.oy|view.oz|view.fisheye, calc(''+image.ox+'|'+image.oy+'|'+image.oz+'|0|0|0|0'), 1.5, default ); ); ); 
				delete(global.customtransition); delete(global.customtransitiontime); 
				changeviewfov();<!-- 切换视角 -->			
							
	</action>


	 <style name="hotspot_point" keep="false"  url="%SWFPATH%/skin_M_kr/spotss.png"
			torigin="image" 
			rotationorder="xyz" 
			mipmapping="true" 
			scale="0.0025" 
			distorted="true" 
			depth="0" 
			depthbuffer="true" 
			zoom="false" 
			normal="false" 
			enabled="true"
			capture="false"
			onloaded="add_all_the_time_tooltip();"
			/>


	
	
	<action name="add_all_the_time_tooltip">
		txtadd(tooltipname, 'tooltip_', get(name));
		addplugin(get(tooltipname));
		txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
		set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
		set(plugin[get(tooltipname)].align,bottom);
		set(plugin[get(tooltipname)].edge,bottom);
		set(plugin[get(tooltipname)].x,0);
		set(plugin[get(tooltipname)].y,-100);
		set(plugin[get(tooltipname)].width,500);
		set(plugin[get(tooltipname)].height,auto);
		set(plugin[get(tooltipname)].background,true);
		set(plugin[get(tooltipname)].backgroundcolor,0x000000);
		set(plugin[get(tooltipname)].roundedge,25);
		set(plugin[get(tooltipname)].backgroundalpha,0.5);
		set(plugin[get(tooltipname)].border,true);
		set(plugin[get(tooltipname)].glow,4);
		set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
		set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:50px;');
		set(plugin[get(tooltipname)].textshadow,1);
		set(plugin[get(tooltipname)].textshadowrange,6.0);
		set(plugin[get(tooltipname)].textshadowangle,90);

		if( get(dzdz)==aomen,
		set(plugin[get(tooltipname)].html,前進),
		copy(plugin[get(tooltipname)].html,hotspot[get(name)].html);
		);
		
		set(plugin[get(tooltipname)].enabled,false);	
	</action>
	
	
	<action name="add_all_the_time_hotspot">
		txtadd(tooltipname, 'tooltip_', get(name));
		addplugin(get(tooltipname));
		txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
		set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
		set(plugin[get(tooltipname)].align,bottom);
		set(plugin[get(tooltipname)].edge,bottom);
		set(plugin[get(tooltipname)].x,0);
		set(plugin[get(tooltipname)].y,-60);
		set(plugin[get(tooltipname)].width,200);
		set(plugin[get(tooltipname)].height,50);
		set(plugin[get(tooltipname)].background,true);
		set(plugin[get(tooltipname)].backgroundcolor,0x000000);
		set(plugin[get(tooltipname)].roundedge,25);
		set(plugin[get(tooltipname)].backgroundalpha,0.5);
		set(plugin[get(tooltipname)].border,true);
		set(plugin[get(tooltipname)].glow,4);
		set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
		set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:32px;');
		set(plugin[get(tooltipname)].textshadow,1);
		set(plugin[get(tooltipname)].textshadowrange,6.0);
		set(plugin[get(tooltipname)].textshadowangle,90);
		if( get(dzdz)==aomen,
		set(plugin[get(tooltipname)].html,後退),
		copy(plugin[get(tooltipname)].html,hotspot[get(name)].html);
		);
		
		txtadd(plugin[get(tooltipname)].onclick,'callwith(hotspot[',get(name),'],onclick)');
		
			
	</action>
	

	
	<action name="hotspottosee" >	
		tween(hotspot[get(pichotspot)].scale,0.2,1);
		tween(hotspot[get(pichotspot)].alpha, 0, 1,default,removehp());
		for(
			set(i,0),i LT 20, inc(i),
			txtadd(spotname,'hp',get(i));
			set(hotspot[get(spotname)].visible,true);
			set(hotspot[get(spotname)].alpha,0);
			tween(hotspot[get(spotname)].alpha,1,1.5);	
		)
	</action>
	
	<action name="removehp">
		set(hotspot[get(pichotspot)].visible,false);
		removehotspot(get(pichotspot));	
	</action>
	

	<action name="showpic1">
		txtadd(picfilename,'%CURRENTXML%/graphics/',get(pic),'.jpg');
		txtadd(pichotspot,'hs_',get(pic));
		getcenter(hsath,hsatv);
		addhotspot(get(pichotspot));		
		copy(hotspot[get(pichotspot)].url,picfilename);
		copy(hotspot[get(pichotspot)].ath, hsath);
		copy(hotspot[get(pichotspot)].atv, hsatv);
		copy(hotspot[get(pichotspot)].name,pichotspot);
		set(hotspot[get(pichotspot)].enabled,true);
		set(hotspot[get(pichotspot)].distorted,true);
		set(hotspot[get(pichotspot)].align,center);
		set(hotspot[get(pichotspot)].alpha,0);
		set(hotspot[get(pichotspot)].scale,0.2);
		tween(hotspot[get(pichotspot)].scale,1,1.5);
		tween(hotspot[get(pichotspot)].alpha,1,1.5);
		set(hotspot[get(pichotspot)].onout,delayedcall(closelayer,0.5,hotspottosee()));
		set(hotspot[get(pichotspot)].onover,stopdelayedcall(closelayer));
		set(hotspot[get(pichotspot)].visible,true);
		for(
			set(i,0),i LT 20, inc(i),
			txtadd(spotname,'hp',get(i));
			set(hotspot[get(spotname)].visible,false);	
		)
	</action>	
	<action name="video_check" >
		for(set(i,0),i LT hotspot.count ,inc(i),
			txtadd(spotname,'spot_v_',get(i));			
			if(hotspot[get(spotname)].ispaused == false,
				set(hotspot[get(spotname)].onvideopaused,'');
				hotspot[get(spotname)].pause();
				set(hotspot[get(spotname)].vcheck,1);				
			);
		);
		
	</action>
	
	<!-- 弹出视频 -->
	<action name="video_c" >
		control_a_m();
		set(layer[skin_control_bar].visible,false);
		looktohotspot(get(name),get(view.fov)); 
		videoplayer_open(%1,%2);
	</action>
	
	<!-- 嵌入视频 -->
	
	<action name="video_d" >
		togglepause();
		set(hotspot[get(name)].vcheck,0);
		set(s,0);
		sub(m,hotspot.count,2);
		for(set(i,1),i LT m ,inc(i),
			txtadd(spotname,'spot_v_',get(i));

			add(s,hotspot[get(spotname)].vcheck);	
		);
		if(s == 0 ,
			if(autorotate.horizon == 1,
				set(autorotate.enabled,true);
				bombtimer(0);
				set(layer[skin_autorate].crop,0|0|69|69);
			);
			if(sound[bgsnd].range == 90 ,
				playsound(bgsnd,'music/bgmusic.mp3',0);
				set(layer[skin_music_bg].crop,0|0|64|64);
			);			
		);

		trace('判断值m等于',get(s));
	</action>
	
	<action name="bombtimer">

		set(autorotate.enabled,true);
		set(bt,%1);
		add(bt,1);
		delayedcall(bomb,1, bombtimer(get(bt)));
		copy(bt_1,autorotate.speed);
		Math.abs(bt_1);
		div(bt_2,360,bt_1);
		add(bt_2,autorotate.waittime);
		if(bt GE bt_2, set(bt,0); nextscene(););
	</action>

	<action name="nextscene">

		set(ns, get(scene[get(xml.scene)].index));
		set(maxs, get(scene.count));
		add(ns,1);
		if(ns == maxs, set(ns,0));
		loadscene(get(scene[get(ns)].name), null, MERGE, BLEND(1.5));

	</action>	
	
	<action name="video_onplay" >	
		stopsound(bgsnd);
		set(layer[skin_music_bg].crop,64|0|64|64);
		set(autorotate.enabled,false);
		stopdelayedcall(bomb);
		set(layer[skin_autorate].crop,69|0|69|69);
		set(hotspot[get(name)].vcheck,1);
	</action>
	
	<action name="video_onpasued" >	
		set(hotspot[get(name)].vcheck,0);
	</action>
	
	<!-- 热点控制 -->
	<action name="control_a_m" > 
		set(autorotate.enabled,false);
		set(layer[skin_autorate].crop,69|0|69|69);
		if(hotspot[get(name)].musiccheck == true ,
			stopsound(bgsnd);
			set(layer[skin_music_bg].crop,64|0|64|64);
		);
		loop_check();
	</action>
	<action name="loop_check" >
		if(autorotate.enabled == true,
			bombtimer(0);
		,
			stopdelayedcall(bomb);
		);
	</action>	
	<!-- 设置用户点击关闭按钮后的自定义动作-->
	<action name="useraction">    

	</action>
	
	<!-- 自动if(autorotate.enabled,set(autorotate.enabled,false);stopdelayedcall(bomb),set(autorotate.enabled,true);bombtimer(0));旋转 -->
	<action name="autorotate_pano" >
		switch(autorotate.enabled);
		switch(layer[skin_autorate].crop,0|0|69|69,69|0|69|69);
		if(autorotate.enabled == true,
			set(autorotate.horizon,1);

		,
			set(autorotate.horizon,0);

		);
		loop_check();
		trace('autorotate.horizon的当前值是',autorotate.horizon);
				
	</action>

	<action name="autorotate_check" >
		if(autorotate.horizon == 1,
			set(autorotate.enabled,true);
			set(layer[skin_autorate].crop,0|0|69|69);
		,
			set(autorotate.enabled,false);
			set(layer[skin_autorate].crop,69|0|69|69);
		);
		trace('autorotate.horizon的当前值是',autorotate.horizon);
	</action>
	
	<!-- 音乐控制 -->
	<action name="music_play" >	
		if(sound[bgsnd].paused == true,
			playsound(bgsnd,'music/bgmusic.mp3',0);
			set(layer[skin_music_bg].crop,0|0|64|64);
			set(sound[bgsnd].range,90);
			set(sound[bgsnd].paused,false);
		,
			pausesound(bgsnd);
			set(layer[skin_music_bg].crop,64|0|64|64);
			set(sound[bgsnd].range,89);
			set(sound[bgsnd].paused,true);
		);
		trace('sound[bgsnd].range的当前值是',sound[bgsnd].range);

	</action>
	
	<action name="music_check" >
		
		if(sound[bgsnd].range == 90,
			playsound(bgsnd,'music/bgmusic.mp3',0);
			set(layer[skin_music_bg].crop,0|0|64|64);
		,
			stopsound(bgsnd);
			set(layer[skin_music_bg].crop,64|0|64|64);
		);
		trace('sound[bgsnd].range的当前值是',sound[bgsnd].range);
	</action>	
	<!-- 场景热点 -->
	<action name="hotspot_animate">
		inc(frame,1,get(frames),0);
		mul(ypos,frame,frameheight);
		txtadd(crop,'0|',get(ypos),'|',get(framewidth),'|',get(frameheight));
		delayedcall(0.1, hotspot_animate() );
	</action>	
	
	<!-- 图文热点 -->
	<action name="hotspot_t_w_m">
		set(layer[tuwen].visible,true);
		set(layer[button_left].visible,false);
		set(layer[skin_control_bar].visible,false);
	</action>	
	
	<action name="close_t_w_m">
		set(layer[tuwen].visible,false);
		set(layer[button_left].visible,true);
		set(layer[skin_control_bar].visible,true);
	</action>

		
	
	<action name="activatespot">  
		animtionss();
		for(set(i,0),i LT scene.count,inc(i),  
		txtadd(spotname,'spot',get(i));  
		set(layer[get(spotname)].visible, true);  
		);  

		txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));  
		copy(layer[radar].x, layer[get(spotidnow)].x);  
		copy(layer[radar].y, layer[get(spotidnow)].y);  
		copy(layer[activespot].x, layer[get(spotidnow)].x);  
		copy(layer[activespot].y, layer[get(spotidnow)].y);  
	  
		set(layer[radar].heading, %1);  
		set(layer[radar].visible, true);  
		set(layer[activespot].visible, true);  
		set(layer[get(spotidnow)].visible, false);  
		set(layer[get(spotidnow)].url, maps/greenmap.png);  
		
    </action>
	
	<action name="activatespot1">  
		for(set(i,0),i LT scene.count,inc(i),  
		txtadd(spotname,'spot',get(i));  
		set(layer[get(spotname)].visible, true);  
		);  

		txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));  
		copy(layer[radar1].x, layer[get(spotidnow)].x);  
		copy(layer[radar1].y, layer[get(spotidnow)].y); 
		copy(layer[activespot1].x, layer[get(spotidnow)].x);  
		copy(layer[activespot1].y, layer[get(spotidnow)].y);  
	  
		set(layer[radar1].heading, %1);  
		set(layer[radar1].visible, true); 
		set(layer[activespot1].visible, true);  
		set(layer[get(spotidnow)].visible, false);
		set(layer[get(spotidnow)].url, maps/greenmap.png);
		set(scene[get(xml.scene)].xdStatr, true););
    </action>
	
	<action name="activatespot2">  
		for(set(i,0),i LT 200,inc(i),  
		txtadd(spotname,'spot',get(i));  
		set(layer[get(spotname)].visible, true);  
		);   
		
		txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));
		copy(layer[radar2].x, layer[get(spotidnow)].x);  
		copy(layer[radar2].y, layer[get(spotidnow)].y); 
		copy(layer[activespot2].x, layer[get(spotidnow)].x);  
		copy(layer[activespot2].y, layer[get(spotidnow)].y); 

		set(layer[radar2].heading, %1);  
		set(layer[radar2].visible, true); 
		set(layer[activespot2].visible, true);   
		set(layer[get(spotidnow)].visible, false); 
		set(layer[get(spotidnow)].url, maps/greenmap.png);
	</action>

	<action name="activatespot3">  
		for(set(i,0),i LT 300,inc(i),  
		txtadd(spotname,'spot',get(i));  
		set(layer[get(spotname)].visible, true);  
		);   
		
		txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));
		copy(layer[radar3].x, layer[get(spotidnow)].x);  
		copy(layer[radar3].y, layer[get(spotidnow)].y);
		copy(layer[activespot3].x, layer[get(spotidnow)].x);  
		copy(layer[activespot3].y, layer[get(spotidnow)].y); 
		set(layer[radar3].heading, %1);  
		set(layer[radar3].visible, true); 
		set(layer[activespot3].visible, true);   
		set(layer[get(spotidnow)].visible, false); 
		set(layer[get(spotidnow)].url, maps/greenmap.png); 
	</action>

	<action name="activatespot4">  
		for(set(i,0),i LT 300,inc(i),  
		txtadd(spotname,'spot',get(i));  
		set(layer[get(spotname)].visible, true);  
		);   
		
		txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));
	
		copy(layer[activespot4].x, layer[get(spotidnow)].x);  
		copy(layer[activespot4].y, layer[get(spotidnow)].y); 

		set(layer[activespot4].visible, true);   
		set(layer[get(spotidnow)].visible, false); 
		set(layer[mapcontainer4].visible,false);
		set(layer[skin_control_bar].visible,true);
		set(layer[skin_scroll_window].visible,true);
		set(layer[get(spotidnow)].url, maps/greenmap.png);
	</action>	

	<action name="activatespot5">  
		for(set(i,0),i LT 300,inc(i),  
		txtadd(spotname,'spot',get(i));  
		set(layer[get(spotname)].visible, true);  
		);   
		
		txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));

		copy(layer[activespot5].x, layer[get(spotidnow)].x);  
		copy(layer[activespot5].y, layer[get(spotidnow)].y); 

		set(layer[activespot5].visible, true);   
		set(layer[get(spotidnow)].visible, false); 
		set(layer[mapcontainer5].visible,false);
		set(layer[skin_control_bar].visible,true);
		set(layer[skin_scroll_window].visible,true);
		set(layer[get(spotidnow)].url, maps/greenmap.png); 
	</action>	


	<!-- <layer name="map1" zorder="1" url="../maps/map1.png" align="lefttop" scale="1" ox="50" oy="93"  onloaded="map_showway()" height="prop" visible="true" handcursor="false">     -->
		<!-- <layer name="map2" url="../maps/map2.png" align="lefttop" scale="1" ox="50" oy="93" width="prop" onloaded="map_showway()" height="512" visible="false" handcursor="false">    
		<layer name="map3" url="../maps/map3.png" align="lefttop" scale="1" ox="50" oy="93" width="388" onloaded="map_showway()" height="prop" visible="false" handcursor="false">  -->


	<action name="map_showway" >
		if(ismobile,
			set(layer[map1].width,300);
			set(layer[map1].enabled,true);
			set(layer[map1].capture,false);
			set(layer[map1].y,-10);
			set(layer[map1].x,0);
			set(layer[map1].oy,0);
			set(layer[map1].ox,0);
			set(layer[map1].align,top);
			set(layer[map1].scale,1);
		);
	</action>

	<!-- 导航地图控制 -->
	<action name="map_open" >
		set(layer[map_pano].visible,true);
		js(krpanoScenePosition.destroy());
		for(
			set(i,1),i LT 6, inc(i),
			txtadd(spotname,'map',get(i));
			txtadd(mapname,'area_',get(i));
			tween(layer[get(spotname)].alpha,1,0.5);	
			<!-- tween(layer[get(mapname)].alpha,1,1); -->
			
			if(ismobile,
				set(layer[get(spotname)].oy,20);
			);
		);
		<!-- js(miniMap.hide();); -->
		
		trace("i等于",get(i));
		if(ismobile,
		tween(layer[map_pano].oy,0,0.3);
		tween(layer[tsTitle1].alpha,1,0.3);
		tween(layer[tsTitle2].alpha,1,0.3);
		tween(layer[tsTitle3].alpha,1,0.3);
		,
		<!-- tween(layer[map_pano].oy,155,0.3); -->
		tween(layer[map_pano].alpha,1,0.1);
		tween(layer[tsTitle1].alpha,1,0.3);
		tween(layer[tsTitle2].alpha,1,0.3);
		tween(layer[tsTitle3].alpha,1,0.3);
		);

		<!-- js(miniMap.bigMapStatus='opened';) -->
		js(miniMap.setBigMapStatusOpened(););
		js(miniMap.hide());
		
	</action>
	
	
	<action name="map_close" >
		js(krpanoScenePosition.update());
		for(
			set(i,0),i LT 5, inc(i),
			txtadd(spotname,'map',get(i));
			tween(layer[get(spotname)].alpha,0,0.5);	
		);

		if(ismobile,
		tween(layer[map_pano].oy,-350,0.5);
		tween(layer[tsTitle1].alpha,0,0.3);
		tween(layer[tsTitle2].alpha,0,0.3);
		tween(layer[tsTitle3].alpha,0,0.3);
		,
		<!-- tween(layer[map_pano].oy,-580,0.5); -->
		tween(layer[map_pano].alpha,0,0.1);
		tween(layer[tsTitle1].alpha,0,0.3);
		tween(layer[tsTitle2].alpha,0,0.3);
		tween(layer[tsTitle3].alpha,0,0.3);
		);
		
		js(miniMap.setBigMapStatusClosed(););
		js(miniMap.show());
		
	</action>
	
	<action name="map_area" >

		for(set(i,1),i LT 6,inc(i),
			txtadd(mapname,'area_',get(i));
			txtadd(mappic,'map',get(i));
			if('%1' == i,
				set(layer[get(mappic)].visible,true);
				set(layer[get(mapname)].backgroundalpha,1);
			,
				set(layer[get(mappic)].visible,false);
				set(layer[get(mapname)].backgroundalpha,0.3);
			);
		);

		js(miniMap.setBigMapStatusOpened(););
		
	</action>

	
	<action name="map_onloaded_warp"> 
		if(ismobile,


			set(layer[tsTitle1].scale,1);
			set(layer[tsTitle1].height,20);
			set(layer[tsTitle1].width,100);
			set(layer[tsTitle1].oy,-5);
			set(layer[tsTitle1].ox,0);
			set(layer[warp1].css,text-align:right;color:#926060;font-family:微软雅黑;font-weight:bold;font-size:14px;);
			set(layer[warp1].oy,-3);
			set(layer[warp1].ox,0);
			set(layer[warp1].height,20);
			set(layer[warp1].width,100);
			set(layer[wurl1].oy,0);
			set(layer[wurl1].ox,-5);



		

			set(layer[tsTitle2].scale,1);
			set(layer[tsTitle2].width,100);
			set(layer[tsTitle2].height,20);
			set(layer[tsTitle2].oy,-5);
			set(layer[tsTitle2].ox,120);
			set(layer[warp2].css,text-align:right;color:#926060;font-family:微软雅黑;font-weight:bold;font-size:14px;);
			set(layer[warp2].oy,-3);
			set(layer[warp2].ox,0);
			set(layer[warp2].height,20);
			set(layer[warp2].width,100);
			set(layer[wurl2].oy,0);
			set(layer[wurl2].ox,-15);

		


			set(layer[tsTitle3].scale,1);
			set(layer[tsTitle3].height,20);
			set(layer[tsTitle3].width,11000);
			set(layer[tsTitle3].oy,-5);
			set(layer[tsTitle3].ox,-120);
			set(layer[warp3].css,text-align:right;color:#926060;font-family:微软雅黑;font-weight:bold;font-size:14px;);
			set(layer[warp3].oy,-3);
			set(layer[warp3].ox,0);
			set(layer[warp3].height,20);
			set(layer[warp3].width,100);
			set(layer[wurl3].oy,0);
			set(layer[wurl3].ox,-5);

			
		);
	</action>
	
	
	
	<action name="langer_cn">
		copy(adr2, browser.location);
		indexoftxt(qi2, get(adr2), 'aomen');
		trace(qi2);
		subtxt(dzdz, adr2, get(qi2), 5);
		trace(dzdz);
		if( get(dzdz)==aomen,
			set(layer[warp1].html,未瀏覽);
			set(layer[warp2].html,當前位置);
			set(layer[warp3].html,已瀏覽);
			set(control.mouse, drag);
		);
	</action>

	<action name="addtexttool">
		addlayer(addtxttools);
		txtadd(layer[addtxttools].parent, 'hotspot[', get(name), ']');
		set(layer[addtxttools].type,text);
		set(layer[addtxttools].align,bottom);
		set(layer[addtxttools].x,0);
		set(layer[addtxttools].y,-35);
		set(layer[addtxttools].html,下一场景);
		set(layer[addtxttools].width,70);
		set(layer[addtxttools].height,25);
		set(layer[addtxttools].background,true);
		set(layer[addtxttools].backgroundcolor,0x000000);
		set(layer[addtxttools].backgroundalpha,0.5);
		set(layer[addtxttools].bgroundedge,10);
		set(layer[addtxttools].border,true);
		set(layer[addtxttools].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-weight:normol; font-size:13px;');
	</action>

	<action name="addlay">
		set(control.mousefovchange, 1);
		addlayer(iframe1);		
		set(layer[iframe1].align,center);
		set(layer[iframe1].width,100%);
		set(layer[iframe1].height,100%);
		set(layer[iframe1].ztiter,3);
		set(layer[iframe1].pictitle,get(hotspot[get(name)].pictitle));
		set(layer[iframe1].picname,get(hotspot[get(name)].picname));
		set(layer[iframe1].picurl,get(hotspot[get(name)].picurl));
		set(layer[iframe1].scroll,get(hotspot[get(name)].scroll));
		set(layer[iframe1].direction,get(hotspot[get(name)].direction));
		set(layer[iframe1].picmusic,get(hotspot[get(name)].picmusic));
		set(layer[iframe1].vdeurl,get(hotspot[get(name)].vdeurl));
		set(layer[iframe1].threeD,get(hotspot[get(name)].threeD));
		set(layer[iframe1].picurl1num,get(hotspot[get(name)].picurl1num));
		set(layer[iframe1].quanjing,get(hotspot[get(name)].quanjing));
		set(layer[iframe1].iframeurl,get(hotspot[get(name)].iframeurl));		
		js(showDetail(get(data)););
	</action>



	
</krpano>