<krpano>
<!--
	A 3D navigation cursor (for mouse only)
	
-->
<action name="mouse_3d_cursor" type="js" autorun="true" if="device.desktop">


<![CDATA[
	
	var mouse3d = null;
	var normal = null;
	var normal_l = 0;
	var hit = null;
	var renderloop_id = null;
	
	krpano.have_mouse_3d_cursor = false;
	
	krpano.actions.add_mouse_3d_cursor = function()
	{	
		krpano.have_mouse_3d_cursor = true;
	
		mouse3d = krpano.addhotspot("mouse3d_cursor","webgl");
		
		mouse3d.type = "image";
		mouse3d.url = "./xml/cursor.png";
		mouse3d.width = mouse3d.height = 50;
		mouse3d.scale = 0.003;
		mouse3d.alpha = 1;
		 mouse3d.distorted = true;

		mouse3d.oversampling = 3;
		mouse3d.bgroundedge = 0;
		mouse3d.mipmapping = true; 
		mouse3d.vcenter = true;
		mouse3d.enabled = false;
		mouse3d.depth = 0;
		mouse3d.textalign = "center";
	
		




		normal = krpano.addhotspot("mouse3d_cursor_normal","webgl");
		normal.polyline = true;
		normal.bordercolor = 0xFFFFFF;
		normal.depth = 0;
		normal.enabled = false; 


		
		renderloop_id = krpano.actions.renderloop( renderloop );
		
		
	}
	
	krpano.actions.remove_mouse_3d_cursor = function()
	{
		if (mouse3d)
		{
			mouse3d.remove();
			mouse3d = null;
		}
		
		if (normal)
		{
			normal.remove();
			normal = null;
		}
		
		if (renderloop_id)
		{
			krpano.actions.stoprenderloop(renderloop_id);
			renderloop_id = null;
		}
		
		krpano.events.removeListener("ondoubleclick", ondoubleclick);
		
		krpano.have_mouse_3d_cursor = false;
	}
	
	
	function ondoubleclick()
	{
		if (hit)
		{
			var eyelevel = krpano.depthmap_navigation ? Number(krpano.depthmap_navigation.eyelevel) : 0;
			if (isNaN(eyelevel) || eyelevel == 0)
				eyelevel = 160.0;
			
			if (hit.ny < -0.8)
			{
				// hit on a floor
				
				var tx = hit.x;
				var ty = hit.y - eyelevel;
				var tz = hit.z;
				
				//krpano.actions.tween("view.longexposure", 0.8, 0.5);		// add motion blur
				krpano.actions.tween("view.tx|view.ty|view.tz", [tx,ty,tz].join("|"), 1.0, "default", "tween(view.longexposure,0.0)");
			}
			else
			{
				// hit on a wall/ceiling or anything else
				
				var offset = 30.0;
				var dx = offset * hit.nx;
				var dy = offset * hit.ny;
				var dz = offset * hit.nz;
				
				var tx = hit.x + dx;
				var ty = hit.y + dy;
				var tz = hit.z + dz;
				
				var groundhit = krpano.actions.raycastdepth(tx, ty, tz, hit.nx, hit.ny + 1.0, hit.nz );
				if (groundhit)
				{
					var tx2 = groundhit.x;
					var ty2 = groundhit.y - eyelevel;
					var tz2 = groundhit.z;
					
					dx = tx2 - hit.x;
					dy = (ty2 - hit.y) * 0.5;
					dz = tz2 - hit.z;
					
					krpano.actions.tween("view.tx|view.ty|view.tz", [tx2,ty2,tz2].join("|"), 1.0);
					
					var h = Math.atan2(-dx, -dz) * 180.0 / Math.PI;
					var v = Math.atan2(-dy, Math.sqrt(dx*dx + dz*dz)) * 180.0 / Math.PI;
					
					krpano.actions.oninterrupt("break");
					krpano.actions.lookto(h,v,90,"tween(default,1.0)",true,false);
				}
			}
		}
	}
	
	function renderloop()
	{
		if (krpano.hoveringelement)
		{
			mouse3d.alpha = normal.alpha = 0;
			hit = null;
		}
		else
		{
			hit = krpano.actions.screentodepth(krpano.mouse.x, krpano.mouse.y);
			
			if(hit)
			{
				mouse3d.alpha = 1;
			
				mouse3d.rx = hit.rx;
				mouse3d.ry = hit.ry;
				mouse3d.rz = hit.rz;

				mouse3d.tx = hit.x;
				mouse3d.ty = hit.y;
				mouse3d.tz = hit.z;
				
				mouse3d.rotationorder = "zxy";
				
				normal.alpha = 1;
				normal.points3d = [hit.x, hit.y, hit.z, hit.x + normal_l*hit.nx, hit.y + normal_l*hit.ny, hit.z + normal_l*hit.nz].join(",");
			}
			else
			{
				mouse3d.alpha = 0;
			}
		}
	}
		
]]></action>
</krpano>
